name: Release Announcement
on:
  push:
    branches:
      - main

jobs:
  create-tag:
    runs-on: self-hosted
    steps:
      - uses: hennejg/github-tag-action@v4.3.1
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          default_bump: patch
          release_branches: main
          tag_prefix: ''
          annotated_tag: false
          create_annotated_tag: false
          tag_message: ${{ github.event.head_commit.message }}
          force_tag: true
          push: true
          push_args: --follow-tags
          release: false
          release_name: ${{ github.event.head_commit.message }}
          prerelease: false
          draft: false
          files: ''
          extra_files: ''
          commit_user_name: github-actions

#  update-package:
#    needs: create-tag
#    runs-on: self-hosted
#    steps:
#      - name: Update package.json
#        run: |
#          echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV ;
#      - name: Update package.json
#        run: |
#          sed -i "s/\"version\": \".*\"/\"version\": \"${{ env.LATEST_TAG }}\"/g" package.json
#          sed -i "s/\"version\": \".*\"/\"version\": \"${{ env.LATEST_TAG }}\"/g" package-lock.json
#      - name: Commit package.json
#        run: |
#            git config --local user.email "cibuddy@users.noreply.github.com"
#            git config --local user.name "CI"
#            git add package.json package-lock.json
#            git commit -m "chore(release): bump to ${{ env.LATEST_TAG }}"
#            git push

  publish:
    needs: create-tag
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Configure NPM registry authentication
        run: echo -e "@hmdlr:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=${{ secrets.ACCESS_TOKEN }}" > .npmrc

      - name: install and build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          npm install
          npm run build

      - run: npm publish

#  release-announcement:
#    needs: update-package
#    runs-on: self-hosted
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: get-package-version
#        run: |
#          echo "PACKAGE_VERSION=$(cat ${GITHUB_WORKSPACE}/package.json | jq -r .version)" >> $GITHUB_ENV ;
#          echo "PACKAGE_NAME=$(cat ${GITHUB_WORKSPACE}/package.json | jq -r .name)" >> $GITHUB_ENV ;
#
#      - name: Release Announcement
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: |
#            ðŸ˜¼New utils artifact publishedðŸ˜¼
#            Artifact: ${{ env.PACKAGE_NAME }}@${{ env.PACKAGE_VERSION }}
#            ðŸš¨${{ github.event.commits[0].message }}ðŸš¨
